Vite and Module Federation Makes Micro-Frontends EASY! (https://www.youtube.com/watch?v=t-nchkL9yIg)

https://github.com/jherr/vite-mod-fed
https://github.com/Annie-Huang/vite-mod-fed
Keep in mind this tutorial is created in  4 Apr 2023 and I am doing this in 12/05/2024.
And I am doing it in typescript as well. so bound to have a lot of lib upgrade and twisting.

https://github.com/originjs/vite-plugin-federation

---------------------------------------------------------------------

PS C:\react\vite-mod-fed> pnpm create vite remote --template react-ts

Scaffolding project in C:\react\vite-mod-fed\remote...

Done. Now run:

  cd remote
  pnpm install
  pnpm run dev

PS C:\react\vite-mod-fed> cd .\remote\
PS C:\react\vite-mod-fed\remote> pnpm add @originjs/vite-plugin-federation -D
PS C:\react\vite-mod-fed\remote> npm run dev
http://localhost:5001/


-----------------------------------

PS C:\react\vite-mod-fed> pnpm create vite host --template react-ts

Scaffolding project in C:\react\vite-mod-fed\host...

Done. Now run:

  cd host
  pnpm install
  pnpm run dev

PS C:\react\vite-mod-fed> cd .\host\
PS C:\react\vite-mod-fed\host> pnpm install
PS C:\react\vite-mod-fed\host> pnpm add @originjs/vite-plugin-federation -D



----------------------------------------------------------

"dev": "vite --port 5001 --strictPort",
The ""--port 5001 --strictPort" part meaning running in port 5001, and if you couldn't get hold of 5001, don't do anything, just fail silently.
Only the remote need to have a specific port because all other app is going to reference this port number for remote setting.
But the host app does not matter which port it is using
